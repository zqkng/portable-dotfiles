###############################################################################
# ~/.tmux.conf
# -------------
# Configurations for tmux
#
###############################################################################

# Check tmux version
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'
if-shell -b '[ "$(echo "$TMUX_VERSION < 3.2" | bc)" = 1 ]' {
  display-message -p "CURRENT TMUX VERSION: ${TMUX_VERSION}"
  display-message -p "REQUIRED TMUX VERSION: >= 3.2"
  display-message -p "Update to a newer version for full functionality."
}

# Scrollback buffer n lines
set -g history-limit 5000

# Trigger bell in current window for activity in any window
set -g bell-action any

# Set on-screen time (ms) for display-panes
set -g display-panes-time 2000

# Start indexing at 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# For faster key repetition and less delay when switching modes
set -s escape-time 0

# Constrain window size to maximum size of any client connected to
# to the current window (rather than any client connected to session)
setw -g aggressive-resize on

# Enable vim keys in Copy mode
setw -g mode-keys vi

# Enable window titles to be specified
set -g set-titles on
# Window title format
set -g set-titles-string "tmux@#T:#S (#W)"

# Enable 256-color support
set -g default-terminal "screen-256color"

# Enable True Color support
# To check for true color support: `tmux info | grep Tc`
set -ga terminal-overrides "*256*:Tc"
#set -gas terminal-overrides "*:RGB"

# Enable mouse support
set -g mouse on


#------------------------------------------------------------------------------
# KEY BINDINGS
#------------------------------------------------------------------------------
# Set prefix key to `Ctrl-f`
unbind C-b
set -g prefix C-f
bind-key C-f send-prefix

# Toggle last window
bind C-f last-window\; refresh-client -S

# Create new window with current directory
#bind c new-window -c "#{pane_current_path}"

# More straight forward key bindings for splitting panes
unbind %
bind \\ split-window -h
unbind '"'
bind - split-window -v

# Switch panes using vi navigation
bind -r h select-pane -L\; refresh-client -S
bind -r j select-pane -D\; refresh-client -S
bind -r k select-pane -U\; refresh-client -S
bind -r l select-pane -R\; refresh-client -S

# Resize panes with vi keys
bind H resize-pane -L 5
bind L resize-pane -R 5
bind K resize-pane -U 5
bind J resize-pane -D 5

# Confirm before killing session
bind C-k confirm kill-session

# Confirm before killing server
#bind C-k confirm kill-server

# Setup copy & paste: OSC 52 and `set-clipboard`
set -s set-clipboard external
set -as terminal-features ',xterm-*:clipboard'

# Remove [p]revious window keybinding; re-bind to paste
unbind p
bind p paste-buffer
# Vi-like copy & paste keybindings in copy mode (<PREFIX> + [)
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Enter send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel

# (Alternative) Setup copy & paste: pipe to external system clipboard
#if-shell '[[ $(uname -s) = Darwin ]]' {
#  set -s copy-command 'pbcopy'
#} {
#  set -s copy-command 'xsel -i'
#}
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel

# Toggle statusbar
bind-key b set-option status

# Reload the config file
bind r source-file ~/.tmux.conf

# Open man page in split window; enter `%%` in command-prompt
bind / command-prompt "split-window 'exec man %%'"

# Quick view of processes
bind '~' split-window "command htop"

# List all open sessions and multi-select to kill
bind C-x run "tmux split-window -l 15 'zsh -ci tmuxkillf'"


#------------------------------------------------------------------------------
# STATUS BAR CUSTOMIZATIONS
#------------------------------------------------------------------------------
# Set amount of time status line messages are displayed (in ms)
set -g display-time 3000
# Set update frequency (default 15 seconds)
set -g status-interval 30
# Center align the window list
#set -g status-justify centre

# Display window activity on status bar
setw -g monitor-activity on
set -g visual-activity off

# Customize status bar visuals
set -g status-left-length 38
set -g status-right-length 150

# Set default colors
set -g @FG_COLOR colour254
set -g @BG_COLOR colour234
set -g @MG_COLOR colour232
set -g @HIGHLIGHT_COLOR colour12
set -g @ALERT_COLOR colour220
set -g @BORDER_COLOR colour248
set -g @PROMPT_COLOR colour16

# Set separator characters and symbols
set -g @L_SOLID '┃'
set -g @L_LINE '│'
set -g @R_SOLID '┃'
set -g @R_LINE '|'
set -g @UP_SYMBOL '↑'
set -g @LOAD_SYMBOL '⚡'
# NOTE: Requires patched fonts
# set -g @L_SOLID ''
# set -g @L_LINE ''
# set -g @R_SOLID ''
# set -g @R_LINE ''
# set -g @UP_SYMBOL '↑'
# set -g @LOAD_SYMBOL '⚡'

set -g status-style 'bg=#{@BG_COLOR},fg=#{@FG_COLOR}'
set -g status-left '#[bg=#{@MG_COLOR},fg=#{@HIGHLIGHT_COLOR}] #T: #S #[bg=#{@BG_COLOR},fg=#{@MG_COLOR}]#{@L_SOLID} '
# Display time depending on timezone (to change: set TZ environment variable)
#set -g status-right '#(uptime | sed "s/.*up \([^,]*\), .*: \(.*\)/ #{@UP_SYMBOL} \1 | #{@LOAD_SYMBOL}\2/") #[bg=#{@BG_COLOR},fg=#{@MG_COLOR}]#{@R_SOLID}#[bg=#{@MG_COLOR},fg=#{@HIGHLIGHT_COLOR}] %a | %I:%M%p %Z #{@R_LINE} %d %b %Y '
set -g status-right '#[bg=#{@BG_COLOR},fg=#{@MG_COLOR}]#{@R_SOLID}#[bg=#{@MG_COLOR},fg=#{@HIGHLIGHT_COLOR}] %a | %I:%M%p %Z #{@R_LINE} %d %b %Y '

set -g window-status-style 'bg=#{@BG_COLOR},fg=#{@FG_COLOR}'
set -g window-status-format '#I: #(pwd="#{pane_current_path}"; echo ${pwd####*/} | tr '[:upper:]' '[:lower:]') '
#set -g window-status-format '#I: #(pwd="#{pane_current_path}"; echo ${pwd####*/}) '
#set -g window-status-format '#I: #W #[fg=#{@FG_COLOR}]#{@L_LINE}'
set -g window-status-current-format '#[bg=#{@FG_COLOR},fg=#{@BG_COLOR}]#{@L_SOLID} #[bg=#{@FG_COLOR},fg=#{@BG_COLOR},noreverse]#I: #W #[bg=#{@BG_COLOR},fg=#{@FG_COLOR}]#{@L_SOLID}'

# Set window activity style
set -g window-status-activity-style 'fg=#{@ALERT_COLOR},blink'
set -g window-status-bell-style 'fg=#{@ALERT_COLOR},blink'

# Highlight border of currently active pane
set -g pane-border-style 'fg=#{@BORDER_COLOR}'
set -g pane-active-border-style 'fg=#{@HIGHLIGHT_COLOR}'

# Set status message/command prompt style
set -g message-style 'bg=#{@FG_COLOR},fg=#{@PROMPT_COLOR}'

